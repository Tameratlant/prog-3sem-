#include <stdio.h>
#include <stdlib.h>
#include <string.h>


#define max_token_size 1000




void Split(char* string, 
    char* delimiters, 
    char*** tokens, 
    int* tokensCount) {

    char* p = strtok(string, delimiters);

    while (p != NULL) {

        strcpy((*tokens)[*tokensCount], p);
        (*tokensCount)++;
        p = strtok(NULL, delimiters);
    }
}

int main() {
    //На числа лучше не смотрите, взяты с потолка исключительно для теста. В остальной main теперь можно смотреть)

    int i = 0, tokens_count = 0;
    char stdin_string[100] = { 0 }, stdin_delimiters[100] = { 0 };      
    int toknumber = 100;
    char** tokens = (char**)malloc(sizeof(char*) * toknumber);          //массив токенов(toknumber - их число)

                                                                         //заполнение строк
    gets(stdin_string);
   
    gets(stdin_delimiters);

    for (i = 0; i < toknumber; i++) {                                   //динамическое выделение памяти
        tokens[i] = malloc(sizeof(char) * 100);                         
    }

    Split((char*)stdin_string, (char*)stdin_delimiters, &tokens, &tokens_count);
                                                                            


    for (i = 0; i < tokens_count; i++) {
        printf(" %s\n", tokens[i]);                                     //вывод для проверки
    }
    for (i = 0; i < toknumber; i++) {                                   //памяти всего 8Гб, самому нужна
        free(tokens[i]);
    }
    free(tokens);
    return 0;
}

